SET NOCOUNT ON;

-- check if the supporting objects were created
IF ((OBJECT_ID('[dbo].[CommandExec]') IS NULL) OR 
    (OBJECT_ID('[dbo].[usp_ExecuteCommand]') IS NULL) OR
    (OBJECT_ID('[dbo].[usp_CompareObjectCounts]') IS NULL))
BEGIN
    RAISERROR('No supporting objects for this functionality could be found in this database.', 16, 1);
    RETURN
END
GO

ALTER FUNCTION [dbo].[FN_IS_DATE]
(
	@P_L1_ATTRIBUTE_VALUE		NVARCHAR(4000) 
)
RETURNS NUMERIC(1)
WITH SCHEMABINDING 
AS 
BEGIN
	DECLARE @V_RETURN       NUMERIC(1)
	DECLARE @CURRENTINDEX   BIGINT
	DECLARE @NEXTINDEX      BIGINT
	DECLARE @RETURNTEXT     NVARCHAR(4000)
	DECLARE @SEPARATOR      NVARCHAR(1)
	DECLARE @COUNTER        NUMERIC(10)
	DECLARE @V_MAX_DAY      NUMERIC(38,6)
	DECLARE @V_MONTH        NUMERIC(38,6)
	DECLARE @V_DAY          NUMERIC(38,6)
	DECLARE @V_YEAR         NUMERIC(38,6)
	DECLARE @V_COMMA_INX    NUMERIC(10)
	DECLARE @V_DOT_LENTH    NUMERIC(10)
	DECLARE @V_DIVIDE_INX   NUMERIC(10)
	DECLARE @V_PLUS_INX     NUMERIC(10)
	DECLARE @V_MINUS_INX    NUMERIC(10)
	DECLARE @V_CHR_A_INX    NUMERIC(10)
	DECLARE @V_CHR_E_INX    NUMERIC(10)
	DECLARE @V_CHR_$_INX    NUMERIC(10)
	SET @SEPARATOR = N'/'
	SET @COUNTER = 0
	SELECT @CURRENTINDEX = 1
	SELECT @V_RETURN = 1
	SELECT @V_CHR_$_INX = CHARINDEX(N'$', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_CHR_A_INX = CHARINDEX(N'd', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_CHR_E_INX = CHARINDEX(N'e', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_PLUS_INX = CHARINDEX(N'+', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_MINUS_INX = CHARINDEX(N'-', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_DIVIDE_INX = CHARINDEX(N'\', @P_L1_ATTRIBUTE_VALUE)
	SELECT @V_COMMA_INX = CHARINDEX(N',', @P_L1_ATTRIBUTE_VALUE)
	IF(DATALENGTH(@P_L1_ATTRIBUTE_VALUE) > 20 OR DATALENGTH(@P_L1_ATTRIBUTE_VALUE) < 16 OR @V_CHR_$_INX > 0 OR @V_CHR_A_INX > 0 OR @V_CHR_E_INX > 0 OR @V_CHR_$_INX > 0 OR @V_PLUS_INX > 0 OR @V_MINUS_INX > 0 OR @V_DIVIDE_INX > 0 OR @V_COMMA_INX > 0 OR CHARINDEX(@SEPARATOR, @P_L1_ATTRIBUTE_VALUE)<=1)
	BEGIN
		SELECT @V_RETURN = 0
	END
	IF (@V_RETURN = 1)
	BEGIN
		WHILE(@CURRENTINDEX <= DATALENGTH(@P_L1_ATTRIBUTE_VALUE)) 
		BEGIN
			SELECT @NEXTINDEX = CHARINDEX(@SEPARATOR, @P_L1_ATTRIBUTE_VALUE, @CURRENTINDEX);
			IF(@NEXTINDEX = 0 OR @NEXTINDEX IS NULL)
				SELECT @NEXTINDEX = DATALENGTH(@P_L1_ATTRIBUTE_VALUE) + 1
			SELECT @RETURNTEXT = SUBSTRING(@P_L1_ATTRIBUTE_VALUE, @CURRENTINDEX, @NEXTINDEX - @CURRENTINDEX);
			SELECT @CURRENTINDEX = @NEXTINDEX + 1;
			SELECT @COUNTER = @COUNTER + 1
			IF(@COUNTER = 1)
			BEGIN
				SELECT @V_DOT_LENTH = DATALENGTH(SUBSTRING(@RETURNTEXT, CHARINDEX(N'.', @RETURNTEXT) + 1, DATALENGTH(@RETURNTEXT)))
				IF(DATALENGTH(@RETURNTEXT) < 64)
				BEGIN
					IF(ISNUMERIC(@RETURNTEXT) = 0 OR @V_DOT_LENTH < 1 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) > 12 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) < 1)
					BEGIN
						SELECT @V_RETURN = 0
						BREAK;
					END
					SELECT @V_DAY = CONVERT(NUMERIC(38,6), @RETURNTEXT)
				END
			END
			IF(@COUNTER = 2)
			BEGIN
				SELECT @V_DOT_LENTH = DATALENGTH(SUBSTRING(@RETURNTEXT, CHARINDEX(N'.', @RETURNTEXT) + 1, DATALENGTH(@RETURNTEXT)))
				IF(DATALENGTH(@RETURNTEXT) < 64)
				BEGIN
					IF(ISNUMERIC(@RETURNTEXT) = 0 OR @V_DOT_LENTH < 1 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) > 31 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) < 1)
					BEGIN
						SELECT @V_RETURN = 0
						BREAK;
					END
					SELECT @V_MONTH = CONVERT(NUMERIC(38,6), @RETURNTEXT)
				END
			END
			IF(@COUNTER = 3)
			BEGIN
				SELECT @V_DOT_LENTH = DATALENGTH(SUBSTRING(@RETURNTEXT, CHARINDEX(N'.', @RETURNTEXT) + 1, DATALENGTH(@RETURNTEXT)))
				IF(DATALENGTH(@RETURNTEXT) < 64)
				BEGIN
					IF(ISNUMERIC(@RETURNTEXT) = 0 OR @V_DOT_LENTH < 1 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) > 9999 OR CONVERT(NUMERIC(38,6), @RETURNTEXT) < 1800)
					BEGIN
						SELECT @V_RETURN = 0
						BREAK;
					END
					SELECT @V_YEAR = CONVERT(NUMERIC(38,6), @RETURNTEXT)
				END
			END
		END
		IF(@COUNTER < 3)
		BEGIN
			SELECT @V_RETURN = 0
		END
		SELECT @V_MAX_DAY = CASE @V_MONTH
			 WHEN 1 THEN 31
			 WHEN 2 THEN 28
			 WHEN 3 THEN 31
			 WHEN 4 THEN 30
			 WHEN 5 THEN 31
			 WHEN 6 THEN 30
			 WHEN 7 THEN 31
			 WHEN 8 THEN 31
			 WHEN 9 THEN 30
			 WHEN 10 THEN 31
			 WHEN 11 THEN 30
			 WHEN 12 THEN 31
		  END
		IF(@V_YEAR%4 = 0 AND @V_MONTH = 2)
		BEGIN
			SELECT @V_MAX_DAY = 29
		END
		IF(@V_DAY > @V_MAX_DAY)
		BEGIN
			SELECT @V_RETURN = 0
		END
	END
	RETURN @V_RETURN
END
GO


ALTER FUNCTION [dbo].[FN_IS_NUMERIC]
(
	@P_L1_ATTRIBUTE_VALUE		NVARCHAR(4000) 
)
RETURNS NUMERIC(1)
WITH SCHEMABINDING 
AS 
BEGIN
	DECLARE @V_RETURN       NUMERIC(1)
	DECLARE @V_COMMA_INX    NUMERIC(10)
	DECLARE @V_DOT_LENTH    NUMERIC(10)
	DECLARE @V_DIVIDE_INX   NUMERIC(10)
	DECLARE @V_PLUS_INX     NUMERIC(10)
	DECLARE @V_MINUS_INX    NUMERIC(10)
	DECLARE @V_CHR_A_INX    NUMERIC(10)
	DECLARE @V_CHR_E_INX    NUMERIC(10)
	DECLARE @V_CHR_$_INX    NUMERIC(10)
	SELECT @V_RETURN = 1
	IF(ISNUMERIC(@P_L1_ATTRIBUTE_VALUE) = 1)
	BEGIN
		SELECT @V_COMMA_INX = CHARINDEX(N',', @P_L1_ATTRIBUTE_VALUE)
		SELECT @V_DOT_LENTH = CHARINDEX(N'.', @P_L1_ATTRIBUTE_VALUE)
		SELECT @V_PLUS_INX = DATALENGTH(SUBSTRING(@P_L1_ATTRIBUTE_VALUE, CHARINDEX(N'+', @P_L1_ATTRIBUTE_VALUE) + 1, DATALENGTH(@P_L1_ATTRIBUTE_VALUE)))
		SELECT @V_MINUS_INX = DATALENGTH(SUBSTRING(@P_L1_ATTRIBUTE_VALUE, CHARINDEX(N'-', @P_L1_ATTRIBUTE_VALUE) + 1, DATALENGTH(@P_L1_ATTRIBUTE_VALUE)))
		SELECT @V_DIVIDE_INX = CHARINDEX(N'\', @P_L1_ATTRIBUTE_VALUE)
		SELECT @V_CHR_$_INX = CHARINDEX(N'$', @P_L1_ATTRIBUTE_VALUE)
		SELECT @V_CHR_A_INX = CHARINDEX(N'd', @P_L1_ATTRIBUTE_VALUE)
		SELECT @V_CHR_E_INX = CHARINDEX(N'e', @P_L1_ATTRIBUTE_VALUE)
		IF(@V_CHR_$_INX > 0 OR @V_CHR_A_INX > 0 OR @V_CHR_E_INX > 0 OR @V_COMMA_INX > 0 OR @V_DIVIDE_INX > 0 OR (@V_DOT_LENTH > 0 AND DATALENGTH(@P_L1_ATTRIBUTE_VALUE) = 1) OR @V_PLUS_INX < 1 OR @V_MINUS_INX < 1)
		BEGIN
			SET @V_RETURN = 0
		END
	END
	ELSE
	BEGIN
		SET @V_RETURN = 0
	END
	RETURN @V_RETURN
END
GO
